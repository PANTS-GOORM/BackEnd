name: BACKEND CI

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/wordsketch?serverTimezone=UTC&characterEncoding=UTF-8
      SPRING_DATASOURCE_USERNAME: pantsadmin
      SPRING_DATASOURCE_PASSWORD: ddongpants

    services:
      postgres:
        image: postgres:16.2-alpine3.18
        env:
          POSTGRES_DB: wordsketch
          POSTGRES_USER: pantsadmin
          POSTGRES_PASSWORD: ddongpants
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "gradle"

      - name: Checkout private repo
        uses: actions/checkout@v4
        with:
          repository: "PANTS-GOORM/secrets_be"
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          path: "secrets_files"

      - name: Set Secrets YML
        run: |
          mkdir -p src/main/resources
          cp secrets_files/* src/main/resources/secrets/

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

      - name: Extract version from merge commit message
        id: extract_version
        run: |
          echo "version=$(echo '${{ github.event.head_commit.message }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image with version tag
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/pants-be:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/pants-be:${{ env.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Checkout manifest repository
        uses: actions/checkout@v4
        with:
          repository: "PANTS-GOORM/infra"
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          path: manifest

      - name: Update Deployment image tag
        run: |
          sed -i "s|chickennight/pants-be:[^[:space:]]*|chickennight/pants-be:${{ env.version }}|" ./manifest/backend/deployment.yaml
          cd manifest
          git config user.name "chickennight"
          git config user.email "john0513@naver.com"
          git add backend/deployment.yaml
          git commit -m "Update back image tag to ${{ env.version }}"
          git push
